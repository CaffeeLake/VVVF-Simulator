<Page x:Class="VvvfSimulator.VVVF_Window.Settings.jerk_setting"
      xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
      xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
      xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
      xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
      xmlns:local="clr-namespace:VvvfSimulator.VVVF_Window.Settings"
      mc:Ignorable="d" 
      d:DesignHeight="434" d:DesignWidth="661"
      Title="mascon_off_setting">

    <Page.Resources>
        <LinearGradientBrush x:Key="AccelerateActive" EndPoint="0.5,1" StartPoint="0.5,0">
            <GradientStop Color="#FF6EA4ED"/>
            <GradientStop Color="#FF165CB9" Offset="1"/>
        </LinearGradientBrush>
        <SolidColorBrush x:Key="AccelerateActiveText" Color="#FF9BD8FF"/>
        <LinearGradientBrush x:Key="BrakeActive" EndPoint="0.5,1" StartPoint="0.5,0">
            <GradientStop Color="#FFFFA243"/>
            <GradientStop Color="Red" Offset="1"/>
        </LinearGradientBrush>
        <SolidColorBrush x:Key="BrakeActiveText" Color="#FFFFEDAD"/>
        <SolidColorBrush x:Key="Inactive" Color="#FFDDDDDD"/>
        <SolidColorBrush x:Key="InactiveText" Color="#FFC8C8C8"/>
        <LinearGradientBrush x:Key="Active" EndPoint="0.5,1" StartPoint="0.5,0">
            <GradientStop Color="#FF6BEF67" Offset="0.003"/>
            <GradientStop Color="#FF24CE1F" Offset="1"/>
        </LinearGradientBrush>
        <SolidColorBrush x:Key="ActiveText" Color="#FFE3FFC8"/>
    </Page.Resources>

    <Grid x:Name="Whole">
        <Grid.RowDefinitions>
            <RowDefinition Height="1*"/>
            <RowDefinition Height="2*"/>
            <RowDefinition Height="15*"/>
            <RowDefinition Height="1*"/>
        </Grid.RowDefinitions>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="1*"/>
            <ColumnDefinition Width="1*"/>
            <ColumnDefinition Width="10*"/>
            <ColumnDefinition Width="1*"/>
        </Grid.ColumnDefinitions>
        <Grid x:Name="ModeSelect" Grid.Column="1" Grid.Row="2">
            <Grid.RowDefinitions>
                <RowDefinition Height="1*"/>
                <RowDefinition Height="1*"/>
            </Grid.RowDefinitions>
            <Button x:Name="ButtonModeAccelerate" Content="Accelerate" FontFamily="M PLUS 2" BorderBrush="{x:Null}" FontWeight="Bold" Click="onClick" FontSize="15">
                <Button.LayoutTransform>
                    <RotateTransform Angle="-90"/>
                </Button.LayoutTransform>
                <Button.Resources>
                    <Style TargetType="{x:Type Border}">
                        <Setter Property="CornerRadius" Value="7,7,0,0"/>
                    </Style>

                    <Style TargetType="Button">
                        <Style.Triggers>
                            <DataTrigger Binding="{Binding IsAccelerateActive}" Value="True">
                                <Setter Property="Background" Value="{DynamicResource AccelerateActive}" />
                                <Setter Property="Foreground" Value="{DynamicResource AccelerateActiveText}" />
                            </DataTrigger>

                            <DataTrigger Binding="{Binding IsAccelerateActive}" Value="False">
                                <Setter Property="Background" Value="{DynamicResource Inactive}" />
                                <Setter Property="Foreground" Value="{DynamicResource InactiveText}" />
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </Button.Resources>
            </Button>
            <Button x:Name="ButtonModeBrake" Content="Brake" FontFamily="M PLUS 2" Margin="0,1,0,0" Grid.Row="1" BorderBrush="{x:Null}" FontWeight="Bold" Click="onClick" FontSize="15">
                <Button.LayoutTransform>
                    <RotateTransform Angle="-90"/>
                </Button.LayoutTransform>
                <Button.Resources>
                    <Style TargetType="{x:Type Border}">
                        <Setter Property="CornerRadius" Value="7,7,0,0"/>
                    </Style>

                    <Style TargetType="Button">
                        <Style.Triggers>
                            <DataTrigger Binding="{Binding IsAccelerateActive}" Value="False">
                                <Setter Property="Background" Value="{DynamicResource BrakeActive}" />
                                <Setter Property="Foreground" Value="{DynamicResource BrakeActiveText}" />
                            </DataTrigger>

                            <DataTrigger Binding="{Binding IsAccelerateActive}" Value="True">
                                <Setter Property="Background" Value="{DynamicResource Inactive}" />
                                <Setter Property="Foreground" Value="{DynamicResource InactiveText}" />
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </Button.Resources>
            </Button>
        </Grid>
        <Grid x:Name="TurnSelect" Grid.Column="2" Grid.Row="1">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="1*"/>
                <ColumnDefinition Width="1*"/>
            </Grid.ColumnDefinitions>
            <Button x:Name="ButtonTurnOn" Content="Turn On" BorderBrush="{x:Null}" FontFamily="M PLUS 2" FontWeight="Bold" Click="onClick" FontSize="15">
                <Button.Resources>
                    <Style TargetType="{x:Type Border}">
                        <Setter Property="CornerRadius" Value="7,7,0,0"/>
                    </Style>

                    <Style TargetType="Button">
                        <Style.Triggers>
                            <DataTrigger Binding="{Binding IsTurnOnActive}" Value="True">
                                <Setter Property="Background" Value="{DynamicResource Active}" />
                                <Setter Property="Foreground" Value="{DynamicResource ActiveText}" />
                            </DataTrigger>

                            <DataTrigger Binding="{Binding IsTurnOnActive}" Value="False">
                                <Setter Property="Background" Value="{DynamicResource Inactive}" />
                                <Setter Property="Foreground" Value="{DynamicResource InactiveText}" />
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </Button.Resources>
            </Button>
            <Button x:Name="ButtonTurnOff" Content="Turn Off" BorderBrush="{x:Null}" FontFamily="M PLUS 2" FontWeight="Bold" Grid.Column="1" Click="onClick" FontSize="15">
                <Button.Resources>
                    <Style TargetType="{x:Type Border}">
                        <Setter Property="CornerRadius" Value="7,7,0,0"/>
                    </Style>

                    <Style TargetType="Button">
                        <Style.Triggers>
                            <DataTrigger Binding="{Binding IsTurnOnActive}" Value="False">
                                <Setter Property="Background" Value="{DynamicResource Active}" />
                                <Setter Property="Foreground" Value="{DynamicResource ActiveText}" />
                            </DataTrigger>

                            <DataTrigger Binding="{Binding IsTurnOnActive}" Value="True">
                                <Setter Property="Background" Value="{DynamicResource Inactive}" />
                                <Setter Property="Foreground" Value="{DynamicResource InactiveText}" />
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </Button.Resources>
            </Button>
        </Grid>
        <Grid x:Name="Main" Grid.Column="2" Grid.Row="2" Background="White">
            <Grid.RowDefinitions>
                <RowDefinition Height="5*"/>
                <RowDefinition Height="1*"/>
                <RowDefinition Height="1*"/>
            </Grid.RowDefinitions>
            <Border BorderBrush="#FFDDDDDD" BorderThickness="0,2,0,0" Grid.Row="1">
                <Grid>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="1*"/>
                        <ColumnDefinition Width="1*"/>
                    </Grid.ColumnDefinitions>
                    <TextBox x:Name="MaxVoltageFreqInput" TextWrapping="Wrap" Text="60" FontFamily="M PLUS 2" FontSize="20" FontWeight="DemiBold" HorizontalContentAlignment="Center" VerticalContentAlignment="Center" Grid.Column="1" Margin="0,0,40,0" TextChanged="ValueUpdated"/>
                    <Label Content="MAX VOLTAGE FREQUENCY" HorizontalAlignment="Center" HorizontalContentAlignment="Center" VerticalContentAlignment="Center" FontFamily="M PLUS 2" FontWeight="Bold" FontSize="15" Foreground="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}" VerticalAlignment="Center"/>
                    <Label Content="Hz" HorizontalContentAlignment="Center" VerticalContentAlignment="Center" FontFamily="M PLUS 2" FontWeight="Bold" FontSize="10" Foreground="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}" VerticalAlignment="Bottom" Grid.Column="1" HorizontalAlignment="Right" Margin="0,0,8,9"/>
                </Grid>
            </Border>
            <Border BorderBrush="#FFDDDDDD" BorderThickness="0,2,0,0" Grid.Row="2">
                <Grid>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="1*"/>
                        <ColumnDefinition Width="1*"/>
                    </Grid.ColumnDefinitions>
                    <TextBox x:Name="FreqChangeRateInput" TextWrapping="Wrap" Text="60" FontFamily="M PLUS 2" FontSize="20" FontWeight="DemiBold" HorizontalContentAlignment="Center" VerticalContentAlignment="Center" Grid.Column="1" Margin="0,0,40,0" TextChanged="ValueUpdated"/>
                    <Label Content="FREQUENCY CHANGE RATE" HorizontalAlignment="Center" HorizontalContentAlignment="Center" VerticalContentAlignment="Center" FontFamily="M PLUS 2" FontWeight="Bold" FontSize="15" Foreground="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}" VerticalAlignment="Center"/>
                    <Label Content="Hz/s" HorizontalContentAlignment="Center" VerticalContentAlignment="Center" FontFamily="M PLUS 2" FontWeight="Bold" FontSize="10" Foreground="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}" VerticalAlignment="Bottom" Grid.Column="1" HorizontalAlignment="Right" Margin="0,0,0,9"/>
                </Grid>
            </Border>
        </Grid>
    </Grid>
</Page>
